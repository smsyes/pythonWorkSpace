(dp1
Vinfo
p2
Vrigging cleanup tool
p3
sVname
p4
VUUSDel
p5
sVtags
p6
Vtools
p7
sVsyntax
p8
Vpython
p9
sVcommand
p10
V# -*- coding: utf-8 -*-\u000aimport pymel.core as pm\u000a\u000adef FindNodes():\u000a    \u000a    #groupId \ucc0c\uaebc\uae30 \ub178\ub4dc\u000a    gidLs=pm.ls(type='groupId')\u000a    trashGid=[]\u000a    for gid in gidLs:\u000a        if not gid.groupId.outputs() : trashGid.append(gid)\u000a    \u000a    #groupParts \ucc0c\uaebc\uae30 \ub178\ub4dc\u000a    gptLs=pm.ls(type='groupParts')\u000a    trashGpts=[]\u000a    for gpts in gptLs:\u000a        if len(gid.inputs())==0 and len(gid.outputs())==0 : trashGpts.append(gid)\u000a    \u000a    #materialInfo \ucc0c\uaebc\uae30 \ub178\ub4dc\u000a    mtInfoLs=pm.ls(type='materialInfo')\u000a    trashMt=[]\u000a    for mtInfo in  mtInfoLs :\u000a        if len(mtInfo.inputs())==0 and len(mtInfo.outputs())==0:trashMt.append(mtInfo)\u000a    \u000a    #Redshift aov \ub178\ub4dc\u000a    aovs=pm.ls(type='RedshiftAOV')\u000a    \u000a    #unknown \ub178\ub4dc\u000a    ukn=pm.ls(type='unknown')\u000a    \u000a    #blindDataTemplate \ucc0c\uaebc\uae30 \ub178\ub4dc\u000a    bdt=pm.ls(type='blindDataTemplate')\u000a    \u000a    #polyBlindData \ucc0c\uaebc\uae30 \ub178\ub4dc\u000a    pbd=pm.ls(type='polyBlindData')\u000a    \u000a    #tweak \ub178\ub4dc\u000a    twk=pm.ls(type='tweak')\u000a    \u000a    #dagPose \ub178\ub4dc\u000a    dags=pm.ls(type='dagPose')\u000a    \u000a    return trashGid, trashGpts, trashMt, aovs, ukn, bdt, pbd, twk, dags\u000a\u000adef PrintNodeLen(ev=None):\u000a    nodes=FindNodes()\u000a    pm.intFieldGrp('gids_Ifg',e=1,v1=len(nodes[0]))\u000a    pm.intFieldGrp('gps_Ifg',e=1,v1=len(nodes[1]))\u000a    pm.intFieldGrp('mti_Ifg',e=1,v1=len(nodes[2]))\u000a    pm.intFieldGrp('aov_Ifg',e=1,v1=len(nodes[3]))\u000a    pm.intFieldGrp('ukn_Ifg',e=1,v1=len(nodes[4]))\u000a    pm.intFieldGrp('bdt_Ifg',e=1,v1=len(nodes[5]))\u000a    pm.intFieldGrp('pbd_Ifg',e=1,v1=len(nodes[6]))\u000a    pm.intFieldGrp('tk_Ifg',e=1,v1=len(nodes[7]))\u000a    pm.intFieldGrp('dag_Ifg',e=1,v1=len(nodes[8]))\u000a\u000adef DeleteNodes(ev=None):\u000a    nodes=FindNodes()\u000a    node=[]\u000a    for obj in nodes:\u000a        if obj: node.append(obj)\u000a\u000a    for ii in range(len(node)):\u000a        pm.progressWindow( pr=0, min=0, max=100, t='Deleting ...' )\u000a        print ('Delete [%s]'%node[ii])\u000a        pm.progressWindow( e=1, pr=(100.0/len(node))*ii )\u000a        pm.delete(node[ii])\u000a        PrintNodeLen()\u000a    pm.progressWindow(endProgress=1)\u000a    print ('Clean!')\u000a\u000adef RigFinalCheck_UI():\u000a    rfchWin='RIG_FINAL_CHECK_TOOL'\u000a    rfchTitle='Rigging Final Check Tool'\u000a    if pm.window(rfchWin,ex=1): pm.deleteUI(rfchWin,wnd=1)\u000a    pm.window(rfchWin,t=rfchTitle,te=1,tlb=1)\u000a    column1=pm.columnLayout(rs=10,cal='left')\u000a    pm.separator()\u000a    row1=pm.rowLayout( nc=3, cw3=(40, 160, 40), adj=2, cal=(1, 'right'), cat=[(1, 'both', 0), (2, 'both', 0), (3, 'both', 0)] )\u000a    pm.separator(st='none')\u000a    pm.text(l=u'\ud544\uc694 \uc5c6\ub294 \ub178\ub4dc \uccb4\ud06c \ud6c4 \uc9c0\uc6b0\uae30', fn='boldLabelFont')\u000a    pm.separator(st='none')\u000a    pm.setParent(column1)\u000a    pm.separator()\u000a    pm.intFieldGrp('gids_Ifg', nf=1, l=u'Group ID    :    ',  v1=0)\u000a    pm.intFieldGrp('gps_Ifg', nf=1, l=u'Group Parts    :    ',  v1=0)\u000a    pm.intFieldGrp('mti_Ifg', nf=1, l=u'Material Info    :    ',  v1=0)\u000a    pm.intFieldGrp('aov_Ifg', nf=1, l=u'AOV    :    ',  v1=0)\u000a    pm.intFieldGrp('ukn_Ifg', nf=1, l=u'Unknown Node    :    ',  v1=0)\u000a    pm.intFieldGrp('bdt_Ifg', nf=1, l=u'Blind Data    :    ',  v1=0)\u000a    pm.intFieldGrp('pbd_Ifg', nf=1, l=u'Poly Blind Data    :    ',  v1=0)\u000a    pm.intFieldGrp('tk_Ifg', nf=1, l=u'Tweak    :    ',  v1=0)\u000a    pm.intFieldGrp('dag_Ifg', nf=1, l=u'Bind Pose    :    ',  v1=0)\u000a    pm.separator()\u000a    row7=pm.rowLayout(nc=2,cat=[(1,'left',20),(2,'left',15)])\u000a    pm.button(l=u'Check',w=90,c=PrintNodeLen)\u000a    pm.button(l=u'Delete',w=90,c=DeleteNodes)\u000a    pm.window(rfchWin,e=1,wh=[240,400], s=0)\u000a    pm.showWindow(rfchWin)\u000a\u000aRigFinalCheck_UI()
p11
sVid
p12
S'3a72fe9c9b9680L'
p13
sVicon
p14
V
s.
